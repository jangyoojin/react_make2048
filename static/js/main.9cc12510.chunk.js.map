{"version":3,"sources":["Score.js","Board.js","Restart.js","App.js","index.js"],"names":["Score","props","className","class","Component","getRandom","min","max","Math","floor","random","Board","state","classNa","word","key","NewBlock","bind","moveBlocks","moveLeft","onKeyDown","turnArrayImplement","i","j","console","log","this","classNameUpdate","wordUpdate","setState","window","addEventListener","e","newClassNa","newWord","count","check","turnClassNa","turnWord","keyCode","turnArray","isFull","c","idx","left","arr","arr2","X","Y","x","y","id","Restart","App","history","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAuBeA,E,kDApBd,WAAYC,GAAQ,uCACbA,G,0CAGP,WACC,OACC,sBAAKC,UAAU,aAAf,UACC,uBAAMC,MAAM,QAAZ,UACC,sBAAMA,MAAM,eAAZ,kBADD,YAGA,iCACC,sBAAMA,MAAM,WAAZ,mBACA,sBAAMA,MAAM,UAAZ,4B,GAbeC,a,qBCAdC,EAAY,SAACC,EAAKC,GAAN,OAAcC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IA6O1DK,E,kDA1OX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IACDW,MAAQ,CACTC,QAAS,CAAC,CAAC,SAAU,SAAU,SAAU,UACzC,CAAC,SAAU,SAAU,SAAU,UAC/B,CAAC,SAAU,SAAU,SAAU,UAC/B,CAAC,SAAU,SAAU,SAAU,WAC/BC,KAAM,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAC3DC,IAAK,GAET,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAKG,UAAY,EAAKA,UAAUH,KAAf,gBACjB,EAAKI,mBAAqB,EAAKA,mBAAmBJ,KAAxB,gBAC1B,EAAKD,WACL,EAAKA,WAhBU,E,4CAqBnB,WAEI,IAAIM,EAAGC,EADPC,QAAQC,IAAI,YAEZ,GACIH,EAAIjB,EAAU,EAAG,GACjBkB,EAAIlB,EAAU,EAAG,SACiB,WAA7BqB,KAAKd,MAAMC,QAAQS,GAAGC,IAC/B,IAAMI,EAAe,YAAOD,KAAKd,MAAMC,SACjCe,EAAU,YAAOF,KAAKd,MAAME,MAClCa,EAAgBL,GAAGC,GAAK,SACxBK,EAAWN,GAAGC,GAAK,EACnBG,KAAKG,SAAS,CAAEhB,QAASc,IACzBD,KAAKG,SAAS,CAAEf,KAAMc,M,+BAG1B,WACIE,OAAOC,iBAAiB,UAAWL,KAAKN,a,kCAG5C,WACIU,OAAOC,iBAAiB,UAAWL,KAAKN,a,uBAG5C,SAAUY,GACNN,KAAKR,WAAWc,K,uBAGpB,SAAUC,EAAYC,EAASC,GAC3BX,QAAQC,IAAI,aAEZ,IADA,IAAIW,EAAQ,EACLA,EAAQD,GAAO,CAAC,IAAD,EACMT,KAAKL,mBAAmBY,EAAYC,GAD1C,mBACjBD,EADiB,KACLC,EADK,KAElBE,IAEJ,MAAO,CAACH,EAAYC,K,gCAGxB,SAAmBD,EAAYC,GAC3BV,QAAQC,IAAI,sBAGZ,IAFA,IAAMY,EAAc,CAAC,CAAC,CAAC,CAAF,GAAS,CAAC,CAAC,CAAF,GAAS,CAAC,CAAC,CAAF,GAAS,CAAC,CAAC,CAAF,IAC1CC,EAAW,CAAC,CAAC,CAAC,CAAF,GAAS,CAAC,CAAC,CAAF,GAAS,CAAC,CAAC,CAAF,GAAS,CAAC,CAAC,CAAF,IACpChB,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBc,EAAYf,GAAGC,GAAKU,EAAW,EAAIV,GAAGD,GACtCgB,EAAShB,GAAGC,GAAKW,EAAQ,EAAIX,GAAGD,GAGxC,MAAO,CAACe,EAAaC,K,wBAIzB,SAAWN,GAEP,IAAIC,EAAYC,EAChB,OAFAV,QAAQC,IAAI,cAEJO,EAAEO,SACN,KAAK,GAAL,MAC4Bb,KAAKP,SAAL,YAAkBO,KAAKd,MAAMC,SAA7B,YAA2Ca,KAAKd,MAAME,OADlF,mBACKmB,EADL,KACiBC,EADjB,KAEI,MACJ,KAAK,GAAL,MAE4BR,KAAKc,UAAL,YAAmBd,KAAKd,MAAMC,SAA9B,YAA4Ca,KAAKd,MAAME,MAAO,GAF1F,mBAEKmB,EAFL,KAEiBC,EAFjB,WAG4BR,KAAKP,SAASc,EAAYC,GAHtD,mBAGKD,EAHL,KAGiBC,EAHjB,WAI4BR,KAAKc,UAAUP,EAAYC,EAAS,GAJhE,mBAIKD,EAJL,KAIiBC,EAJjB,KAKI,MACJ,KAAK,GAAL,MAE4BR,KAAKc,UAAL,YAAmBd,KAAKd,MAAMC,SAA9B,YAA4Ca,KAAKd,MAAME,MAAO,GAF1F,mBAEKmB,EAFL,KAEiBC,EAFjB,WAG4BR,KAAKP,SAASc,EAAYC,GAHtD,mBAGKD,EAHL,KAGiBC,EAHjB,WAI4BR,KAAKc,UAAUP,EAAYC,EAAS,GAJhE,mBAIKD,EAJL,KAIiBC,EAJjB,KAKI,MACJ,KAAK,GAAL,MAE4BR,KAAKc,UAAL,YAAmBd,KAAKd,MAAMC,SAA9B,YAA4Ca,KAAKd,MAAME,MAAO,GAF1F,mBAEKmB,EAFL,KAEiBC,EAFjB,WAG4BR,KAAKP,SAASc,EAAYC,GAHtD,mBAGKD,EAHL,KAGiBC,EAHjB,WAI4BR,KAAKc,UAAUP,EAAYC,EAAS,GAJhE,mBAIKD,EAJL,KAIiBC,EAJjB,KAKI,MACJ,QACI,OAERR,KAAKG,SAAS,CAAEhB,QAASoB,IACzBP,KAAKG,SAAS,CAAEf,KAAMoB,IAEtB,IADA,IAAIO,GAAS,EACJnB,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAyB,WAArBU,EAAWX,GAAGC,GAAiB,CAC/BkB,GAAS,EACT,MAIPA,GACDf,KAAKV,a,sBAQb,SAASiB,EAAYC,GACjBV,QAAQC,IAAI,YAEZ,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IAEnB,GAAIW,EAAWX,GAAG,KAAOW,EAAWX,GAAG,IAAMW,EAAWX,GAAG,KAAOW,EAAWX,GAAG,GAC5E,IAAK,IAAIoB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMC,EAAU,EAAJD,EACe,WAAvBT,EAAWX,GAAGqB,KAEdT,EAAQZ,GAAGqB,IAAQ,EACnBV,EAAWX,GAAGqB,GAAO,QAAUT,EAAQZ,GAAGqB,GAE1CT,EAAQZ,GAAGqB,EAAM,GAAK,EACtBV,EAAWX,GAAGqB,EAAM,GAAK,eAMjC,IAAK,IAAIpB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGxB,GAAyB,WAArBU,EAAWX,GAAGC,GAAlB,CAEA,IAAKqB,EAAOrB,EAAI,EAAGqB,GAAQ,IACK,WAAxBX,EAAWX,GAAGsB,IAA+B,IAATA,GADdA,KAI9B,GAAIX,EAAWX,GAAGC,KAAOU,EAAWX,GAAGsB,GAAO,CAC1CV,EAAQZ,GAAGsB,IAAS,EACpBX,EAAWX,GAAGsB,GAAQ,QAAUV,EAAQZ,GAAGsB,GAC3CV,EAAQZ,GAAGC,GAAK,EAChBU,EAAWX,GAAGC,GAAK,SACnB,QAKhBC,QAAQC,IAAI,gBAEZ,IAASH,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIqB,EAEJ,GAAyB,WAArBX,EAAWX,GAAGC,GAElB,GAAyB,WAArBU,EAAWX,GAAG,GAAlB,CAOA,IAAKsB,EAAOrB,EAAI,EAAGqB,GAAQ,IACK,WAAxBX,EAAWX,GAAGsB,IAA+B,IAATA,GADdA,KAI1BA,IAASrB,EAAI,IACbU,EAAWX,GAAGsB,EAAO,GAAKX,EAAWX,GAAGC,GACxCW,EAAQZ,GAAGsB,EAAO,GAAKV,EAAQZ,GAAGC,GAClCU,EAAWX,GAAGC,GAAK,SACnBW,EAAQZ,GAAGC,GAAK,QAdhBU,EAAWX,GAAG,GAAKW,EAAWX,GAAGC,GACjCW,EAAQZ,GAAG,GAAKY,EAAQZ,GAAGC,GAC3BU,EAAWX,GAAGC,GAAK,SACnBW,EAAQZ,GAAGC,GAAK,EAgB5B,OADAC,QAAQC,IAAI,gBACL,CAACQ,EAAYC,K,mBAIxB,SAAMW,EAAKC,EAAMC,EAAGC,EAAGC,EAAGC,GACtBL,EAAIE,GAAGC,IAAM,EACbF,EAAKC,GAAGC,GAAK,QAAUH,EAAIE,GAAGC,GAC9BH,EAAII,GAAGC,GAAK,EACZJ,EAAKG,GAAGC,GAAK,W,oBAGjB,WAEI,OADA1B,QAAQC,IAAI,UAER,qBAAKvB,UAAU,aAAf,SACI,wBAAOiD,GAAG,QAAV,UACI,+BACI,oBAAIjD,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,QAEjE,+BACI,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,QAEjE,+BACI,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,QAEjE,+BACI,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,KAC7D,oBAAIZ,UAAWwB,KAAKd,MAAMC,QAAQ,GAAG,GAArC,SAA0Ca,KAAKd,MAAME,KAAK,GAAG,iB,GAlOjEV,aCcLgD,E,kDAfX,WAAYnD,GAAQ,uCAChBA,G,0CAGP,WACC,OACC,sBAAKkD,GAAG,QAAR,UACa,sBAAMA,GAAG,OAAT,kBACA,sBAAMA,GAAG,UAAT,4B,GATM/C,aC0BPiD,E,kDArBd,WAAYpD,GAAQ,IAAD,8BAClB,cAAMA,IACDW,MAAQ,CACZ0C,QAAS,IAHQ,E,0CAMnB,WACC,OACC,gCACC,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,OAED,8BACC,cAAC,EAAD,a,GAfalD,aCFlBmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9cc12510.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Score extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"TitleScore\">\n\t\t\t\t<span class=\"veryj\">\n\t\t\t\t\t<span class=\"text-style-1\">2048</span>ver.yj\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span class=\"scorebox\">Score</span>\n\t\t\t\t\t<span class=\"bestbox\">Best</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Score;\n","import React, { Component } from 'react';\n\nconst getRandom = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            classNa: [['block0', 'block0', 'block0', 'block0'],\n            ['block0', 'block0', 'block0', 'block0'],\n            ['block0', 'block0', 'block0', 'block0'],\n            ['block0', 'block0', 'block0', 'block0']],\n            word: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n            key: 0,\n        };\n        this.NewBlock = this.NewBlock.bind(this);\n        this.moveBlocks = this.moveBlocks.bind(this);\n        this.moveLeft = this.moveLeft.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.turnArrayImplement = this.turnArrayImplement.bind(this);\n        this.NewBlock();\n        this.NewBlock();\n    }\n\n    //make new blocks\n    //블럭이 들어있지 않은 자리에 숫자2 블럭을 추가함\n    NewBlock() {\n        console.log('newblock');\n        let i, j;\n        do {\n            i = getRandom(0, 4);\n            j = getRandom(0, 4);\n        } while (this.state.classNa[i][j] !== 'block0')\n        const classNameUpdate = [...this.state.classNa];\n        const wordUpdate = [...this.state.word];\n        classNameUpdate[i][j] = 'block2';\n        wordUpdate[i][j] = 2;\n        this.setState({ classNa: classNameUpdate });\n        this.setState({ word: wordUpdate });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"keydown\", this.onKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.addEventListener(\"keydown\", this.onKeyDown);\n    }\n\n    onKeyDown(e) {\n        this.moveBlocks(e)\n    }\n\n    turnArray(newClassNa, newWord, count) {\n        console.log('turnArray');\n        let check = 0;\n        while (check < count) {\n            [newClassNa, newWord] = this.turnArrayImplement(newClassNa, newWord);\n            check++;\n        }\n        return [newClassNa, newWord];\n    }\n\n    turnArrayImplement(newClassNa, newWord) {\n        console.log('turnArrayImplement');\n        const turnClassNa = [[, , ,], [, , ,], [, , ,], [, , ,]];\n        const turnWord = [[, , ,], [, , ,], [, , ,], [, , ,]];\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                turnClassNa[i][j] = newClassNa[3 - j][i];\n                turnWord[i][j] = newWord[3 - j][i];\n            }\n        }\n        return [turnClassNa, turnWord];\n    }\n\n    //block moving function\n    moveBlocks(e) {\n        console.log('moveblocks');\n        let newClassNa, newWord;\n        switch (e.keyCode) {\n            case 37://left\n                [newClassNa, newWord] = this.moveLeft([...this.state.classNa], [...this.state.word]);\n                break;\n            case 38: //up\n                //this.moveUp2();\n                [newClassNa, newWord] = this.turnArray([...this.state.classNa], [...this.state.word], 3);\n                [newClassNa, newWord] = this.moveLeft(newClassNa, newWord);\n                [newClassNa, newWord] = this.turnArray(newClassNa, newWord, 1);\n                break;\n            case 39: //right\n                // this.moveRight();\n                [newClassNa, newWord] = this.turnArray([...this.state.classNa], [...this.state.word], 2);\n                [newClassNa, newWord] = this.moveLeft(newClassNa, newWord);\n                [newClassNa, newWord] = this.turnArray(newClassNa, newWord, 2);\n                break;\n            case 40: //down\n                //this.moveDown();\n                [newClassNa, newWord] = this.turnArray([...this.state.classNa], [...this.state.word], 1);\n                [newClassNa, newWord] = this.moveLeft(newClassNa, newWord);\n                [newClassNa, newWord] = this.turnArray(newClassNa, newWord, 3);\n                break;\n            default:\n                return;\n        }\n        this.setState({ classNa: newClassNa });\n        this.setState({ word: newWord });\n        let isFull = true;\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                if (newClassNa[i][j] === 'block0') {\n                    isFull = false;\n                    break;\n                }\n            }\n        }\n        if (!isFull) {\n            this.NewBlock();\n        }\n\n    }\n\n    //move blocks function\n    //충돌 시 병합 여부 체크하기\n    // setState하기\n    moveLeft(newClassNa, newWord) {\n        console.log('moveLeft');\n        //병합\n        for (var i = 0; i < 4; i++) {\n            //한 줄에 병합을 두 번 하는 경우\n            if (newClassNa[i][0] === newClassNa[i][1] && newClassNa[i][2] === newClassNa[i][3]) {\n                for (let c = 0; c < 2; c++) {\n                    const idx = c * 2;\n                    if (newClassNa[i][idx] !== 'block0') {\n                        // 병합\n                        newWord[i][idx] *= 2;\n                        newClassNa[i][idx] = 'block' + newWord[i][idx];\n                        // 초기화\n                        newWord[i][idx + 1] = 0;\n                        newClassNa[i][idx + 1] = 'block0';\n                    }\n                }\n            }\n            //한 줄에 병합 한 번 하는 경우 + 병합하는 것이 없는 경우\n            else {\n                for (var j = 1; j < 4; j++) {\n                    var left;\n                    //빈칸이면 패스하기\n                    if (newClassNa[i][j] === 'block0') continue;\n                    // 중간에 빈 블럭이 있는지 확인\n                    for (left = j - 1; left >= 0; left--) {\n                        if (newClassNa[i][left] !== 'block0' || left === 0) break;\n                    }\n                    // left = j보다 작은 채워진 가장 가까운 blocK의 col index\n                    if (newClassNa[i][j] === newClassNa[i][left]) {\n                        newWord[i][left] *= 2;\n                        newClassNa[i][left] = 'block' + newWord[i][left];\n                        newWord[i][j] = 0;\n                        newClassNa[i][j] = 'block0';\n                        break;\n                    }\n                }\n            }\n        }\n        console.log('병합');\n        //이동\n        for (var i = 0; i < 4; i++) {\n            for (var j = 1; j < 4; j++) {\n                var left;\n                // 빈칸이면 이동x\n                if (newClassNa[i][j] === 'block0') continue;\n                // 왼쪽 끝이 비었으면 현재값 넣어주기\n                if (newClassNa[i][0] === 'block0') {\n                    newClassNa[i][0] = newClassNa[i][j];\n                    newWord[i][0] = newWord[i][j];\n                    newClassNa[i][j] = 'block0';\n                    newWord[i][j] = 0;\n                    continue;\n                }\n                for (left = j - 1; left >= 0; left--) {\n                    if (newClassNa[i][left] !== 'block0' || left === 0) break;\n                }\n                // left = 왼쪽 중에 비어 있지 않은 가장 큰 index\n                if (left !== j - 1) {\n                    newClassNa[i][left + 1] = newClassNa[i][j];\n                    newWord[i][left + 1] = newWord[i][j];\n                    newClassNa[i][j] = 'block0';\n                    newWord[i][j] = 0;\n                }\n            }\n        }\n        console.log('이동');\n        return [newClassNa, newWord];\n    }\n\n\n    merge(arr, arr2, X, Y, x, y) {\n        arr[X][Y] *= 2;\n        arr2[X][Y] = 'block' + arr[X][Y];\n        arr[x][y] = 0;\n        arr2[x][y] = 'block0';\n    }\n\n    render() {\n        console.log('render');\n        return (\n            <div className=\"background\">\n                <table id='board'>\n                    <tr>\n                        <td className={this.state.classNa[0][0]}>{this.state.word[0][0]}</td>\n                        <td className={this.state.classNa[0][1]}>{this.state.word[0][1]}</td>\n                        <td className={this.state.classNa[0][2]}>{this.state.word[0][2]}</td>\n                        <td className={this.state.classNa[0][3]}>{this.state.word[0][3]}</td>\n                    </tr>\n                    <tr>\n                        <td className={this.state.classNa[1][0]}>{this.state.word[1][0]}</td>\n                        <td className={this.state.classNa[1][1]}>{this.state.word[1][1]}</td>\n                        <td className={this.state.classNa[1][2]}>{this.state.word[1][2]}</td>\n                        <td className={this.state.classNa[1][3]}>{this.state.word[1][3]}</td>\n                    </tr>\n                    <tr>\n                        <td className={this.state.classNa[2][0]}>{this.state.word[2][0]}</td>\n                        <td className={this.state.classNa[2][1]}>{this.state.word[2][1]}</td>\n                        <td className={this.state.classNa[2][2]}>{this.state.word[2][2]}</td>\n                        <td className={this.state.classNa[2][3]}>{this.state.word[2][3]}</td>\n                    </tr>\n                    <tr>\n                        <td className={this.state.classNa[3][0]}>{this.state.word[3][0]}</td>\n                        <td className={this.state.classNa[3][1]}>{this.state.word[3][1]}</td>\n                        <td className={this.state.classNa[3][2]}>{this.state.word[3][2]}</td>\n                        <td className={this.state.classNa[3][3]}>{this.state.word[3][3]}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    }\n}\n\n\nexport default Board;\n","import React, { Component } from 'react';\n\nclass Restart extends Component {\n    constructor(props) {\t\n\t\tsuper(props);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div id='reset'>\n                <span id='undo'>undo</span>\n                <span id='restart'>restart</span>\n            </div>\n\t\t);\n\t}\n}\n\n\nexport default Restart;\n","import React, { Component } from 'react';\nimport './style.css';\nimport Score from './Score.js';\nimport Board from './Board';\nimport Restart from './Restart'\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: []\n\t\t};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Score />\n\t\t\t\t\t<Restart />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Board />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}